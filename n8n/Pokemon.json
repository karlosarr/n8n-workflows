{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Execute No-SQL query": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-30T19:59:54.178Z",
  "id": "PqeIhoq3SwAjIHLq",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Pokemon",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "7ba56881-22bc-49ce-a702-5edf3b4c7a91",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        -16,
        -48
      ],
      "webhookId": "cf1de04f-3e38-426c-89f0-3bdb110a5dcf",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "### üë®‚Äçüé§ Setup\n1. Add your **postgresql** and **OpenAI** credentials.\n2. Click **Chat** button and start asking questions to your database.\n3. Activate the workflow and you can make the chat publicly available.",
        "height": 120,
        "width": 560,
        "color": 5
      },
      "id": "ae1ed4e4-d337-4bb7-99f9-8b51371311a9",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -480,
        -48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "üõ†Ô∏è Tools Used:\n1. Execute SQL Query: Used to execute any query generated by the agent.\n2. Get DB Schema and Tables List: It returns the list of all the tables with its schema name.\n3. Get Table Definition: It returns table details like column names, foreign keys and more of a particular table in a schema.",
        "height": 156,
        "width": 562,
        "color": 7
      },
      "id": "be2e6b17-4dbe-44d9-a1c8-44fec7727274",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        672,
        544
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "üëÜ You can exchange this with any other chat model of your choice.",
        "height": 99,
        "width": 162,
        "color": 7
      },
      "id": "9356b4a5-1e35-41c0-872c-80072b47ce53",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        208,
        544
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "üëÜ You can change how many number of messages to keep using `Context Window Length` option. It's 5 by default.",
        "height": 159,
        "width": 162,
        "color": 7
      },
      "id": "f93dce97-e284-449a-9cb6-95aa56aa98a8",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        544
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        208,
        192
      ],
      "id": "a47b0980-78f5-4ded-b070-2aeac96a314e",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "bqQEfUn2F2rNgmbS",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "collection": "={{ $fromAI('Collection', ``, 'string') }}",
        "options": {},
        "query": "={{ $fromAI('Query__JSON_Format_', ``, 'json') }}"
      },
      "type": "n8n-nodes-base.mongoDbTool",
      "typeVersion": 1.1,
      "position": [
        672,
        144
      ],
      "id": "3da4255c-a5db-4f44-b310-928a48d1ad5c",
      "name": "Execute No-SQL query",
      "credentials": {
        "mongoDb": {
          "id": "Dquk6qU1mXON8Aw9",
          "name": "MongoDB account 2"
        }
      }
    },
    {
      "parameters": {
        "databaseName": "model"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryMongoDbChat",
      "typeVersion": 1,
      "position": [
        320,
        192
      ],
      "id": "601d6cdf-c787-4ac6-81e3-80aaaa09f891",
      "name": "MongoDB Chat Memory",
      "credentials": {
        "mongoDb": {
          "id": "BnGVpEkccvc6ypKL",
          "name": "MongoDB account"
        }
      }
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Eres un asistente experto en bases de datos MongoDB, especializado en la base de datos \"pokemon\" y la colecci√≥n \"pokemons\". Tu √∫nica funci√≥n es recibir preguntas en lenguaje natural y traducirlas a consultas No-SQL para esta colecci√≥n espec√≠fica.\n\n### Instrucciones\n1.  **Analiza la pregunta del usuario** para entender qu√© informaci√≥n necesita.\n2.  **Genera el objeto JSON con los par√°metros** necesarios para la consulta.\n3.  **Llama siempre a la herramienta `Execute No-SQL query`** usando el JSON que generaste. Nunca respondas directamente al usuario.\n\n### Herramienta Disponible\n-   **Execute No-SQL query**: Ejecuta una consulta en la colecci√≥n `pokemons`. Acepta un objeto JSON con los siguientes par√°metros:\n    -   `query` (objeto, opcional): El filtro de la consulta. Ejemplo: `{\"type\": \"fire\"}`.\n    -   `projection` (objeto, opcional): Define qu√© campos devolver. Ejemplo: `{\"name\": 1, \"type\": 1, \"_id\": 0}`.\n    -   `sort` (objeto, opcional): Define el orden de los resultados. Ejemplo: `{\"stats.attack\": -1}`.\n    -   `limit` (n√∫mero, opcional): Limita el n√∫mero de documentos devueltos. Ejemplo: `5`.\n\n### Formato de Salida Requerido (MUY IMPORTANTE)\nTu √∫nica salida debe ser la llamada a la herramienta con el JSON correctamente estructurado. Si un par√°metro como `sort` o `limit` no es necesario, om√≠telo del objeto.\n\n**Ejemplo de llamada a la herramienta:**\nSi el usuario pide \"los 3 pokemons de tipo agua m√°s r√°pidos\", tu llamada a la herramienta debe usar este input:\n{\n  \"query\": {\"type\": \"water\"},\n  \"sort\": {\"stats.speed\": -1},\n  \"limit\": 3\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        240,
        -48
      ],
      "id": "e3aa4ec0-d194-4138-81ec-55075d2f6daa",
      "name": "AI Agent"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-08-25T01:12:39.000Z",
  "versionId": "aeaa0aaa-8b91-437a-8885-9c6bc709e828"
}